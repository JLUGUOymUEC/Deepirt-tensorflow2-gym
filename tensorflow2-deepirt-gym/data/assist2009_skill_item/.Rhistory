corrects <- c(tmp$CurrentRes,tmp$NextRes[nrow(tmp)])
corrects <- c(corrects,rep(NA,(max_leng-length(corrects))))
max_leng
check <- rbind(len,questions,corrects)
check[1,] <- c(check[1,1],rep(NA,(ncol(check)-1)))
View(check)
View(tmp)
all_data <- NULL
j <- 0
for(i in unique(assistments$UserID)){
tmp <- assistments[assistments$UserID==i,]
len <- nrow(tmp)+1
questions <- c(tmp$CurrentQue,tmp$NextQue[nrow(tmp)])
questions <- c(questions,rep(NA,(max_leng-length(questions))))
corrects <- c(tmp$CurrentRes,tmp$NextRes[nrow(tmp)])
corrects <- c(corrects,rep(NA,(max_leng-length(corrects))))
check <- rbind(len,questions,corrects)
check[1,] <- c(check[1,1],rep(NA,(ncol(check)-1)))
all_data <- rbind(all_data,check)
j <- j+ 1
print(j)
}
i
View(tmp)
rep(NA,(max_leng-length(questions)))
max_leng-length(questions)
max_leng
max_leng <- max_leng +1
all_data <- NULL
j <- 0
for(i in unique(assistments$UserID)){
tmp <- assistments[assistments$UserID==i,]
len <- nrow(tmp)+1
questions <- c(tmp$CurrentQue,tmp$NextQue[nrow(tmp)])
questions <- c(questions,rep(NA,(max_leng-length(questions))))
corrects <- c(tmp$CurrentRes,tmp$NextRes[nrow(tmp)])
corrects <- c(corrects,rep(NA,(max_leng-length(corrects))))
check <- rbind(len,questions,corrects)
check[1,] <- c(check[1,1],rep(NA,(ncol(check)-1)))
all_data <- rbind(all_data,check)
j <- j+ 1
print(j)
}
assistments$CurrentQue <- assistments$CurrentQue+ max(assistments$CurrentQue)
assistments$CurrentQue <- assistments$CurrentQue+ max(assistments$CurrentQue)
assistments$NextQue <- assistments$NextQue+ max(assistments$CurrentQue)
assistments <- rbind(assistments_test,assistments_train)
assistments$CurrentQue <- assistments$CurrentQue+ max(assistments$CurrentQue)
assistments$NextQue <- assistments$NextQue+ max(assistments$CurrentQue)
test_user
train_data <- NULL
test_data <- NULL
tmp$UserID[1] in test_user
is.element(tmp$UserID[1], test_user)
View(assistments)
assistments <- rbind(assistments_test,assistments_train)
assistments$CurrentQue <- assistments$CurrentQue+ max(assistments$CurrentQue)
assistments$NextQue <- assistments$NextQue+ max(assistments$CurrentQue)
assistments <- rbind(assistments_test,assistments_train)
max(assistments$CurrentQue)
tmp_m <- max(assistments$CurrentQue)
assistments$CurrentQue <- assistments$CurrentQue+tmp_m
assistments$NextQue <- assistments$NextQue+ tmp_m
for(i in 1:length(unique(assistments$NextQue))){
uni <- unique(assistments$NextQue)[i]
assistments[assistments$NextQue==uni,"NextQue"] <- i
}
assistments <- rbind(assistments_test,assistments_train)
tmp_m <- max(assistments$CurrentQue)
assistments$CurrentQue <- assistments$CurrentQue+tmp_m
assistments$NextQue <- assistments$NextQue+ tmp_m
for(i in 1:length(unique(assistments$NextQue))){
uni <- unique(assistments$NextQue)[i]
assistments[assistments$NextQue==uni,"NextQue"] <- i
assistments[assistments$CurrentQue==uni,"CurrentQue"] <- i
}
max(c(assistments$NextQue,assistments$CurrentQue))
max_leng <- 0
for(i in unique(unique(assistments$UserID))){
tmp_m <- nrow(assistments[assistments$UserID==i,])
if(tmp_m > max_leng) max_leng <-tmp_m
}
max_leng <- max_leng +1
train_data <- NULL
test_data <- NULL
j <- 0
for(i in unique(assistments$UserID)){
tmp <- assistments[assistments$UserID==i,]
len <- nrow(tmp)+1
questions <- c(tmp$CurrentQue,tmp$NextQue[nrow(tmp)])
questions <- c(questions,rep(NA,(max_leng-length(questions))))
corrects <- c(tmp$CurrentRes,tmp$NextRes[nrow(tmp)])
corrects <- c(corrects,rep(NA,(max_leng-length(corrects))))
check <- rbind(len,questions,corrects)
check[1,] <- c(check[1,1],rep(NA,(ncol(check)-1)))
if(is.element(tmp$UserID[1], test_user)){
test_data <- rbind(test_data,check)
}else{
train_data <- rbind(train_data,check)
}
j <- j+ 1
print(j)
}
View(train_data)
nrow(train_data)
train <- train_data[1:6000,]
valid <- train_data[6001:nrow(train_data),]
write.table(train,"data/assists2009_tsutsumi/new_assists_train1.csv",sep = ",",col.names = FALSE,row.names = FALSE,na = "")
write.table(valid,"data/assists2009_tsutsumi//new_assists_valid1.csv",sep = ",",col.names = FALSE,row.names = FALSE,na = "")
write.table(test_data,"data/assists2009_tsutsumi//new_assists_test.csv",sep = ",",col.names = FALSE,row.names = FALSE,na = "")
for(i in 1:ncol(train_data)){
if(sum(is.na(train_data[,i]))==nrow(train_data)){
print(i)
train_data <- train_data[,1:(i-1)]
break
}
}
ncol(train_data)
delete_na_col <- function(train){
for(i in 1:ncol(train)){
if(sum(is.na(train[,i]))==nrow(train)){
print(i)
train <- train_data[,1:(i-1)]
return(train)
break
}
}
}
train <- delete_na_col(train)
train <- train_data[1:6000,]
delete_na_col <- function(train){
for(i in 1:ncol(train)){
if(sum(is.na(train[,i]))==nrow(train)){
print(i)
train <- train[,1:(i-1)]
return(train)
break
}
}
}
train <- delete_na_col(train)
train <- train_data[1:6000,]
for(i in 1:ncol(train)){
if(sum(is.na(train[,i]))==nrow(train)){
print(i)
train <- train[,1:(i-1)]
return(train)
break
}
}
ncol(train)
train <- train_data[1:6000,]
ncol(train)
delete_na_col <- function(train){
for(i in 1:ncol(train)){
if(sum(is.na(train[,i]))==nrow(train)){
print(i)
train <- train[,1:(i-1)]
return(train)
}
}
return(train)
}
train <- delete_na_col(train)
valid <- train_data[6001:nrow(train_data),]
valid <- delete_na_col(valid)
test <- delete_na_col(test)
ncol(test)
test_data <- delete_na_col(test_data)
write.table(train,"data/assists2009_tsutsumi/new_assists_train1.csv",sep = ",",col.names = FALSE,row.names = FALSE,na = "")
write.table(valid,"data/assists2009_tsutsumi//new_assists_valid1.csv",sep = ",",col.names = FALSE,row.names = FALSE,na = "")
write.table(test_data,"data/assists2009_tsutsumi//new_assists_test.csv",sep = ",",col.names = FALSE,row.names = FALSE,na = "")
max(assistments$CurrentQue)
max(assistments$NextQue)
setwd("/Users/tsutsumi/Documents/実験データ/")
x <- read.csv("skill_item30_student(skill_name).csv")
x <- x[,c("user_id","problem_id","correct","skill_name")]
str(x)
x$skill_id <- as.numeric(factor(x$skill_name))
str(x)
unique(x$skill_name)
length(unique(x$skill_name))
setwd("/Users/tsutsumi/Documents/実験データ/")
x <- read.csv("skill_builder_data.csv")
x$skill_id <- as.numeric(factor(x$skill_name))
unique(x$skill_name)
length(unique(x$skill_name))
x$skill_id <- as.numeric(factor(x$skill_name))
x <- x[,c("user_id","problem_id","correct","skill_name")]
x$skill_id <- as.numeric(factor(x$skill_name))
x_ <- read.csv("skill_builder_data.csv")
x<-x_
x <- x[,c("order_id","user_id","problem_id","correct","skill_name")]
x$skill_id <- as.numeric(factor(x$skill_name))
x[x$user_id="64525",]
x[x$user_id=="64525",]
length(x$user_id)
length(unique(x$user_id))
x_u<-x[x$user_id=="64525",]
x_u[order(x_u$order_id),]
x_u<-x_u[order(x_u$order_id),]
length(x$user_id)
length(unique(x$user_id))
D_u<-data.frame(row.names =c(1:4) ,col.names = c(1:200))
D_u<-data.frame(row.names =c(1:4) ,colnames = c(1:200))
D_u<-data.frame()
row.names(D_u)<-c(1:4)
rownames(D_u)<-c(1:4)
rownames(D_u)
row.names(D_u)
row.names(D_u)<-c(1:4)
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
View(D_u)
x_u<-x[x$user_id=="64525",]
x_u<-x_u[order(x_u$order_id),]
D_u[1,1]<-length(x_u)
D_u[2,1:length(x_u)]<-x_u$skill_id
D_u[3,1:length(x_u)]<-x_u$problem_id
length(x_u)
x_u$skill_id
D_u[2,1:nrow(x_u)]<-x_u$skill_id
nrow(x_u)
D_u[2,1:200]<-
length(x_u)
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
x_u<-x[x$user_id=="64525",]
x_u<-x_u[order(x_u$order_id),]
D_u[1,1]<-length(x_u)
x_u$skill_id[1:200]
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
x_u<-x[x$user_id=="64525",]
x_u<-x_u[order(x_u$order_id),]
D_u[1,1]<-length(x_u)
if(nrow(x_u)<=200){
D_u[2,1:nrow(x_u)]<-x_u$skill_id
D_u[3,1:nrow(x_u)]<-x_u$problem_id
D_u[4,1:nrow(x_u)]<-x_u$correct
}else{
D_u[2,1:200]<-x_u$skill_id[1:200]
D_u[3,1:200]<-x_u$problem_id[1:200]
D_u[4,1:200]<-x_u$correct[1:200]
}
View(D_u)
x$problem_id <- as.numeric(factor(x$problem_id))
#4217
D<-matrix()
D<-rbind(D,D_u)
if(i==1){
D<-D_u
}else{
D<-rbind(D,D_u)
}
#4217
D<-matrix()
for(u in 1:length(unique(x$user_id))){
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
x_u<-x[x$user_id==unique(x$user_id)[u],]
x_u<-x_u[order(x_u$order_id),]
D_u[1,1]<-length(x_u)
if(nrow(x_u)<=200){
D_u[2,1:nrow(x_u)]<-x_u$skill_id
D_u[3,1:nrow(x_u)]<-x_u$problem_id
D_u[4,1:nrow(x_u)]<-x_u$correct
}else{
D_u[2,1:200]<-x_u$skill_id[1:200]
D_u[3,1:200]<-x_u$problem_id[1:200]
D_u[4,1:200]<-x_u$correct[1:200]
}
if(u==1){
D<-D_u
}else{
D<-rbind(D,D_u)
}
}
View(D)
x[x$problem_id==1,]
#4217
D<-matrix()
for(u in 1:length(unique(x$user_id))){
print(paste0(u,"/",length(unique(x$user_id))))
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
x_u<-x[x$user_id==unique(x$user_id)[u],]
x_u<-x_u[order(x_u$order_id),]
if(length(x_u)<5){next}
D_u[1,1]<-length(x_u)
if(nrow(x_u)<=200){
D_u[2,1:nrow(x_u)]<-x_u$skill_id
D_u[3,1:nrow(x_u)]<-x_u$problem_id
D_u[4,1:nrow(x_u)]<-x_u$correct
}else{
D_u[2,1:200]<-x_u$skill_id[1:200]
D_u[3,1:200]<-x_u$problem_id[1:200]
D_u[4,1:200]<-x_u$correct[1:200]
}
if(u==1){
D<-D_u
}else{
D<-rbind(D,D_u)
}
}
View(D)
nrow(x_u)
#4217
D<-matrix()
for(u in 1:length(unique(x$user_id))){
print(paste0(u,"/",length(unique(x$user_id))))
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
x_u<-x[x$user_id==unique(x$user_id)[u],]
x_u<-x_u[order(x_u$order_id),]
if(nrow(x_u)<5){next}
D_u[1,1]<-nrow(x_u)
if(nrow(x_u)<=200){
D_u[2,1:nrow(x_u)]<-x_u$skill_id
D_u[3,1:nrow(x_u)]<-x_u$problem_id
D_u[4,1:nrow(x_u)]<-x_u$correct
}else{
D_u[2,1:200]<-x_u$skill_id[1:200]
D_u[3,1:200]<-x_u$problem_id[1:200]
D_u[4,1:200]<-x_u$correct[1:200]
}
if(u==1){
D<-D_u
}else{
D<-rbind(D,D_u)
}
}
View(D)
#4217
D<-matrix()
for(u in 1:length(unique(x$user_id))){
print(paste0(u,"/",length(unique(x$user_id))))
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
x_u<-x[x$user_id==unique(x$user_id)[u],]
x_u<-x_u[order(x_u$order_id),]
if(nrow(x_u)<5){next}
if(nrow(x_u)<=200){
D_u[1,1]<-nrow(x_u)
D_u[2,1:nrow(x_u)]<-x_u$skill_id
D_u[3,1:nrow(x_u)]<-x_u$problem_id
D_u[4,1:nrow(x_u)]<-x_u$correct
}else{
D_u[1,1]<-200
D_u[2,1:200]<-x_u$skill_id[1:200]
D_u[3,1:200]<-x_u$problem_id[1:200]
D_u[4,1:200]<-x_u$correct[1:200]
}
if(u==1){
D<-D_u
}else{
D<-rbind(D,D_u)
}
}
View(D)
#4217
D<-matrix()
for(u in 1:length(unique(x$user_id))){
print(paste0(u,"/",length(unique(x$user_id))))
D_u<-matrix(data = "",nrow = 4 ,ncol = 200)
x_u<-x[x$user_id==unique(x$user_id)[u],]
x_u<-x_u[order(x_u$order_id),]
if(nrow(x_u)<5){next}
if(nrow(x_u)<=200){
D_u[1,1]<-nrow(x_u)
D_u[2,1:nrow(x_u)]<-x_u$skill_id
D_u[3,1:nrow(x_u)]<-x_u$problem_id
D_u[4,1:nrow(x_u)]<-x_u$correct
}else{
D_u[1,1]<-200
D_u[2,1:200]<-x_u$skill_id[1:200]
D_u[3,1:200]<-x_u$problem_id[1:200]
D_u[4,1:200]<-x_u$correct[1:200]
}
if(u==1){
D<-D_u
}else{
D<-rbind(D,D_u)
}
}
result<-D
write.table(result,"Assistments2009_item_skill.csv",sep = ",",row.names = FALSE,col.names = FALSE)
View(D)
result<-as.numeric(result)
View(D)
write.table(result,"Assistments2009_item_skill.csv",sep = ",",row.names = FALSE,col.names = FALSE)
result<-D
str(result)
result<-as.integer(result)
result<-D
write.table(result,"Assistments2009_item_skill.csv",sep = ",",row.names = FALSE,col.names = FALSE)
result<-D
result<-as.data.frame(result)
View(result)
result<-as.numeric(result)
str(result)
result<-as.integer(result)
result[1]
result[2]
result[1,]
result<-D
result<-as.data.frame(result)
write.table(result,"Assistments2009_item_skill.csv",sep = ",",row.names = FALSE,col.names = FALSE)
mode(result)
mode(D)
result<-D
result<-as.data.frame(result)
result<-D
result<-D
n<-ncol(D)
ix<-1:n
result<-lapply(D[ix],as.integer)
View(result)
srt(D)
str(D)
View(D)
D[1,1]
D[1,2]
D[2,1]
result<-D
result<-as.data.frame(result)
result<-as.data.frame(result)
result<-as.numeric(as.character((result)))
result<-as.data.frame(result)
result<-D
result<-as.data.frame(result)
View(result)
y <- read.csv("Assistments2009_item_skill.csv")
View(y)
y <- read.csv("Assistments2009_item_skill.csv",sep = ",")
View(y)
y <- read.csv("Assistments2009_item_skill.csv",sep = "\",\"",stringsAsFactors=FALSE)
y <- read.csv("Assistments2009_item_skill.csv",sep = ",",stringsAsFactors=FALSE)
View(y)
write.table(y,"Assistments2009_item_skill_.csv",sep = ",",row.names = FALSE,col.names = FALSE)
apply(result, 1,as.numeric)
result<-apply(result, 1,as.numeric)
View(result)
result<-D
result<-apply(result, 2,as.numeric)
View(result)
write.table(result,"Assistments2009_item_skill_.csv",sep = ",",row.names = FALSE,col.names = FALSE)
write.table(result,"Assistments2009_item_skill_.csv",sep = ",",row.names = FALSE,col.names = FALSE,na = "")
length(x$problem_id)
length(unique(x$problem_id)))
length(unique(x$problem_id))
length(unique(x$skill_id))
length(unique(x$user_id))
length(unique(x$user_id))/10
#10分割用
setwd("/Users/tsutsumi/Documents/実験データ/Deep-IRT_skill_item入力データ/")
for(i in 0){
valid<-result[1:421*4,]
write.table(train,patse0("assist_skill_item_train",i,".csv",sep = ",",row.names = FALSE,col.names = FALSE,na = "")
result<-rbind(train,valid)
}
for(i in 0:0){
for(i in 0:0){
train<-result[421*4+1:nrow(result),]
valid<-result[1:421*4,]
write.table(train,patse0("assist_skill_item_train",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
write.table(valid,patse0("assist_skill_item_valid",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
result<-rbind(train,valid)
}
}
for(i in 0:1){
c<-421*4
train<-result[c+1:nrow(result),]
valid<-result[1:c,]
write.table(train,patse0("assist_skill_item_train",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
write.table(valid,patse0("assist_skill_item_valid",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
result<-rbind(train,valid)
}
nrow(result)
nrow(result)/4
length(unique(x$user_id))
for(i in 0:1){
c<-377*4
c_<-c+1
train<-result[c+1:nrow(result),]
valid<-result[1:c,]
write.table(train,patse0("assist_skill_item_train",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
write.table(valid,patse0("assist_skill_item_valid",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
result<-rbind(train,valid)
}
for(i in 0:1){
c<-377*4
c_<-c+1
train<-result[c_:nrow(result),]
valid<-result[1:c,]
write.table(train,patse0("assist_skill_item_train",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
write.table(valid,patse0("assist_skill_item_valid",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
result<-rbind(train,valid)
}
for(i in 0:1){
c<-377*4
c_<-c+1
train<-result[c_:nrow(result),]
valid<-result[1:c,]
write.table(train,paste0("assist_skill_item_train",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
write.table(valid,paste0("assist_skill_item_valid",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
result<-rbind(train,valid)
}
#10分割用
setwd("/Users/tsutsumi/Documents/実験データ/Deep-IRT_skill_item入力データ/")
for(i in 0:9){
c<-377*4
c_<-c+1
train<-result[c_:nrow(result),]
valid<-result[1:c,]
write.table(train,paste0("assist_skill_item_train",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
write.table(valid,paste0("assist_skill_item_valid",i,".csv"),sep = ",",row.names = FALSE,col.names = FALSE,na = "")
result<-rbind(train,valid)
}
